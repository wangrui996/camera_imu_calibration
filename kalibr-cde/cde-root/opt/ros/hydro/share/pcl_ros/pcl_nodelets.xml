

<!-- PCL IO library component -->
<library path="lib/libpcl_ros_io">
  <class name="pcl/NodeletMUX" type="NodeletMUX" base_class_type="nodelet::Nodelet">
    <description>
      NodeletMUX represent a mux nodelet for PointCloud topics: it takes N (up
      to 8) input topics, and publishes all of them on one output topic.
    </description>
  </class>

  <class name="pcl/NodeletDEMUX" type="NodeletDEMUX" base_class_type="nodelet::Nodelet">
    <description>
      NodeletDEMUX represent a demux nodelet for PointCloud topics: it
      publishes 1 input topic to N output topics.
    </description>
  </class>

  <class name="pcl/PCDReader" type="PCDReader" base_class_type="nodelet::Nodelet">
    <description>
      PCDReader reads in a PCD (Point Cloud Data) v.5 file from disk and converts it to a PointCloud message.
    </description>
  </class>

  <class name="pcl/BAGReader" type="BAGReader" base_class_type="nodelet::Nodelet">
    <description>
      BAGReader reads in sensor_msgs/PointCloud2 messages from BAG files.
    </description>
  </class>

  <class name="pcl/PCDWriter" type="PCDWriter" base_class_type="nodelet::Nodelet">
    <description>
      PCDWriter writes a PointCloud message to disk in a PCD (Point Cloud Data) v.5 file format.
    </description>
  </class>

  <class name="pcl/PointCloudConcatenateFieldsSynchronizer" type="PointCloudConcatenateFieldsSynchronizer" base_class_type="nodelet::Nodelet">
    <description>
      PointCloudConcatenateFieldsSynchronizer is a special form of data synchronizer: it listens for a set of input PointCloud messages on the
      same topic, checks their timestamps, and concatenates their fields together into a single PointCloud output message.
    </description>
  </class>
  <class name="pcl/PointCloudConcatenateDataSynchronizer" type="PointCloudConcatenateDataSynchronizer" base_class_type="nodelet::Nodelet">
    <description>
      PointCloudConcatenateDataSynchronizer is a special form of data
      synchronizer: it listens for a set of input PointCloud messages on
      different topics, and concatenates them together into a single PointCloud
      output message.  
    </description>
  </class>
</library>
  
<!-- PCL Filters library component -->
<library path="lib/libpcl_ros_filters">
  <class name="pcl/PassThrough" type="PassThrough" base_class_type="nodelet::Nodelet">
    <description>
      PassThrough is a filter that uses the basic Filter class mechanisms for passing data around.
    </description>
  </class>

  <class name="pcl/VoxelGrid" type="VoxelGrid" base_class_type="nodelet::Nodelet">
    <description>
      VoxelGrid assembles a local 3D grid over a given PointCloud, and uses that to downsample the data.
    </description>
  </class>

  <class name="pcl/ProjectInliers" type="ProjectInliers" base_class_type="nodelet::Nodelet">
    <description>
      ProjectInliers uses a model and a set of inlier indices from a PointCloud to project them into a separate PointCloud.
    </description>
  </class>

  <class name="pcl/ExtractIndices" type="ExtractIndices" base_class_type="nodelet::Nodelet">
    <description>
      ExtractIndices extracts a set of indices from a PointCloud as a separate PointCloud.
    </description>
  </class>

  <class name="pcl/StatisticalOutlierRemoval" type="StatisticalOutlierRemoval" base_class_type="nodelet::Nodelet">
    <description>
      StatisticalOutlierRemoval uses point neighborhood statistics to filter outlier data.
    </description>
  </class>
</library>


